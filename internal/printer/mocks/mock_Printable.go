// Code generated by mockery v2.42.1. DO NOT EDIT.

package printer

import mock "github.com/stretchr/testify/mock"

// MockPrintable is an autogenerated mock type for the Printable type
type MockPrintable struct {
	mock.Mock
}

type MockPrintable_Expecter struct {
	mock *mock.Mock
}

func (_m *MockPrintable) EXPECT() *MockPrintable_Expecter {
	return &MockPrintable_Expecter{mock: &_m.Mock}
}

// Headers provides a mock function with given fields:
func (_m *MockPrintable) Headers() []string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Headers")
	}

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// MockPrintable_Headers_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Headers'
type MockPrintable_Headers_Call struct {
	*mock.Call
}

// Headers is a helper method to define mock.On call
func (_e *MockPrintable_Expecter) Headers() *MockPrintable_Headers_Call {
	return &MockPrintable_Headers_Call{Call: _e.mock.On("Headers")}
}

func (_c *MockPrintable_Headers_Call) Run(run func()) *MockPrintable_Headers_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockPrintable_Headers_Call) Return(_a0 []string) *MockPrintable_Headers_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockPrintable_Headers_Call) RunAndReturn(run func() []string) *MockPrintable_Headers_Call {
	_c.Call.Return(run)
	return _c
}

// Values provides a mock function with given fields:
func (_m *MockPrintable) Values() []string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Values")
	}

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// MockPrintable_Values_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Values'
type MockPrintable_Values_Call struct {
	*mock.Call
}

// Values is a helper method to define mock.On call
func (_e *MockPrintable_Expecter) Values() *MockPrintable_Values_Call {
	return &MockPrintable_Values_Call{Call: _e.mock.On("Values")}
}

func (_c *MockPrintable_Values_Call) Run(run func()) *MockPrintable_Values_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockPrintable_Values_Call) Return(_a0 []string) *MockPrintable_Values_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockPrintable_Values_Call) RunAndReturn(run func() []string) *MockPrintable_Values_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockPrintable creates a new instance of MockPrintable. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockPrintable(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockPrintable {
	mock := &MockPrintable{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
